cmake_minimum_required(VERSION 2.8)
project(use_opencv)

if (CMAKE_COMPILER_IS_GNUC OR CMAKE_COMPILER_IS_GNUCXX)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
endif ()

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/ ${CMAKE_MODULE_PATH})

include_directories(/usr/local/include/)  
find_package(OpenCV REQUIRED)


option(BUILD_TOOLS "build tools" OFF)
if (BUILD_TOOLS)
  add_definitions(-DBUILD_TOOLS)
  add_subdirectory(tools)
endif()
option(BUILD_APP_OBJDETECT "build object detect with features" OFF)
if (BUILD_APP_OBJDETECT)
  add_definitions(-DBUILD_APP_OBJDETECT)
  add_subdirectory(objDetect)
endif ()
option(BUILD_APP_SOFTCASCADE "build soft cascade" OFF)
if (BUILD_APP_SOFTCASCADE)
  add_definitions(-DBUILD_APP_SOFTCASCADE)
  add_subdirectory(softcascade)
endif()
option(BUILD_APP_TRAINCASCADE "build train cascade" OFF)
if (BUILD_APP_TRAINCASCADE)
  add_definitions(-DBUILD_APP_TRAINCASCADE)
  add_subdirectory(cascade_train)
endif()
option(BUILD_APP_IMAGE_MATCH "build image match" OFF)
if (BUILD_APP_IMAGE_MATCH)
  add_definitions(-DBUILD_APP_IMAGE_MATCH)
  add_subdirectory(image_match)
endif()
  add_subdirectory(apps)